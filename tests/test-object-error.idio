;;
;; Copyright (c) 2022 Ian Fitchet <idf(at)idio-lang.org>
;;
;; Licensed under the Apache License, Version 2.0 (the "License"); you
;; may not use this file except in compliance with the License.  You
;; may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.
;;
;;

;;
;; test-object-error.idio
;;

module tests/object

object-error0 := Tests

#*

We have a bunch of test cases which should provoke a
^rt-instance-error or ^rt-parameter-error.  So we can write a load
function which will wrapper the actual load with a trap for
(^rt-instance-error ^rt-parameter-error) and compare the message
strings.

*#

object-error-load := {
  n := 0

  function (filename msg) {
    if (not (string? filename)) (error/type ^rt-parameter-type-error 'load "string" filename)

    n = n + 1

    exp-tests := 1

    ;eprintf "loading #%s %s looking for %s\n" n filename msg
    trap (^rt-instance-error
	  ^rt-parameter-error) (function (c) {
	    ;eprintf "object-error #%s: %s %s\n" n msg (idio-error-location c)
	    test (idio-error-message c) msg

	    if (not (string=? (idio-error-message c) msg)) {
	      condition-report (append-string "object-error-load: " filename) c (current-error-handle)
	    }

	    trap-return 'instance-error
	  }) {
	    t0 := Tests
	    (symbol-value 'load 'Idio) filename
	    if (not (equal? Tests (t0 + exp-tests))) {
	      eprintf "object-error #%s: %s did not generate \"%s\"\n" n filename msg
	      Errors = Errors + 1
	      Tests = t0 + exp-tests
	    }
    }
  }
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; object.c

object-error-load "object-errors/allocate-instance-bad-class-type.idio" "bad parameter type: '#t' a constant is not a class"
object-error-load "object-errors/allocate-instance-bad-nfields-type.idio" "bad parameter type: '#t' a constant is not a integer"
object-error-load "object-errors/allocate-instance-bad-nfields-value.idio" "%allocate-instance nfields='-1': should be non-negative"

object-error-load "object-errors/allocate-entity-bad-class-type.idio" "bad parameter type: '#t' a constant is not a class"
object-error-load "object-errors/allocate-entity-bad-nfields-type.idio" "bad parameter type: '#t' a constant is not a integer"
object-error-load "object-errors/allocate-entity-bad-nfields-value.idio" "%allocate-entity nfields='-1': should be non-negative"

object-error-load "object-errors/instance-of-bad-class-type.idio" "bad parameter type: '#t' a constant is not a class"

object-error-load "object-errors/set-instance-proc-bad-gf-type.idio" "bad parameter type: '#t' a constant is not a generic"
object-error-load "object-errors/set-instance-proc-bad-proc-type.idio" "bad parameter type: '#t' a constant is not a function"

object-error-load "object-errors/class-name-bad-class-type.idio" "bad parameter type: '#t' a constant is not a class"
object-error-load "object-errors/class-direct-supers-bad-class-type.idio" "bad parameter type: '#t' a constant is not a class"
object-error-load "object-errors/class-direct-slots-bad-class-type.idio" "bad parameter type: '#t' a constant is not a class"
object-error-load "object-errors/class-cpl-bad-class-type.idio" "bad parameter type: '#t' a constant is not a class"
object-error-load "object-errors/class-slots-bad-class-type.idio" "bad parameter type: '#t' a constant is not a class"
object-error-load "object-errors/class-nfields-bad-class-type.idio" "bad parameter type: '#t' a constant is not a class"
object-error-load "object-errors/class-getters-n-setters-bad-class-type.idio" "bad parameter type: '#t' a constant is not a class"

object-error-load "object-errors/generic-name-bad-gf-type.idio" "bad parameter type: '#t' a constant is not a generic"
object-error-load "object-errors/generic-documentation-bad-gf-type.idio" "bad parameter type: '#t' a constant is not a generic"
object-error-load "object-errors/generic-methods-bad-gf-type.idio" "bad parameter type: '#t' a constant is not a generic"

object-error-load "object-errors/method-generic-function-bad-m-type.idio" "bad parameter type: '#t' a constant is not a method"
object-error-load "object-errors/method-specializers-bad-m-type.idio" "bad parameter type: '#t' a constant is not a method"
object-error-load "object-errors/method-procedure-bad-m-type.idio" "bad parameter type: '#t' a constant is not a method"

object-error-load "object-errors/pct-make-instance-bad-class-type.idio" "bad parameter type: '#t' a constant is not a class"
object-error-load "object-errors/pct-make-instance-bad-kind-type.idio" "bad parameter type: '#t' a constant is not a symbol"
object-error-load "object-errors/pct-make-instance-too-few-class-args.idio" "%make-instance class args='(#t)' a pair is not a list of (name supers slots)"
object-error-load "object-errors/pct-make-instance-too-few-generic-args.idio" "%make-instance generic args='#n' a constant is not a list of (name [docstr])"
object-error-load "object-errors/pct-make-instance-too-few-method-args.idio" "%make-instance method args='(#t)' a pair is not a list of (gf spec proc)"
object-error-load "object-errors/pct-make-instance-bad-kind-value.idio" "%make-instance kind='instance' a symbol is not a generic|method|class"

object-error-load "object-errors/slot-ref-slot-not-found.idio" "slot unknown not found in class <class>"
object-error-load "object-errors/slot-ref-bad-obj-type.idio" "bad parameter type: '#t' a constant is not a instance"
object-error-load "object-errors/slot-ref-bad-slot-type.idio" "bad parameter type: '#t' a constant is not a symbol"

object-error-load "object-errors/slot-set-slot-not-found.idio" "slot unknown not found in class <class>"
object-error-load "object-errors/slot-set-bad-obj-type.idio" "bad parameter type: '#t' a constant is not a instance"
object-error-load "object-errors/slot-set-bad-slot-type.idio" "bad parameter type: '#t' a constant is not a symbol"

object-error-load "object-errors/slot-set-direct-bad-obj-type.idio" "bad parameter type: '#t' a constant is not a instance"
object-error-load "object-errors/slot-set-direct-bad-index-type.idio" "bad parameter type: '#t' a constant is not a integer"
object-error-load "object-errors/slot-set-direct-bad-index-value.idio" "%slot-set-direct! index='-1': should be non-negative"

object-error-load "object-errors/dump-instance-bad-instance-type.idio" "bad parameter type: '#t' a constant is not a instance"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; object.idio

object-error-load "object-errors/class-instance-bad-instance-type.idio" "bad parameter type: '#t' a constant is not a class or the name of a class"

object-error-load "object-errors/TC-get-keyword-arg-not-found.idio" "TC/get-keyword-arg :bar keyword not found"

object-error-load "object-errors/compute-method-more-specific-inconsistent-specializers-count.idio" "compute-method-more-specific? two methods have a different number of specializers"

object-error-load "object-errors/compute-apply-methods-bad-type.idio" "compute-apply-methods no applicable methods/next methods for (foo #t)"

object-error-load "object-errors/initialize-generic-no-methods.idio" "initialize generic function foo has no methods"

;; all done?
Tests? (object-error0 + 43)


if (e? testfile) {
  rm testfile
}

lock := (libc/pipe)

opn := named-pipe-into {
  libc/exit 9
  (cat)
} | {
  cat > testfile
}

hprintf pid-ph "%d,%d\n" PID (%idio-job-pgid %%last-job)
close-handle pid-ph

str := sprintf "hello from %d" PID

(cond-expand
 (/dev/fd {
   ;; ensure the /dev/fd named pipe async command has completed
   libc/close (libc/pipe-writer lock)
   libc/read (libc/pipe-reader lock) 1
   libc/close (libc/pipe-reader lock)

   (wait)
 }))

job-control-write-line-to opn str

if (e? testfile) {
  ifh := open-input-file testfile
  msg := read-line ifh
  close-handle ifh

  if (not (string=? str msg)) {
    libc/exit 3
  }
} {
  libc/exit 4
}

;;; CAT -- One of the Kernighan and Van Wyk benchmarks.

;; (define inport #f)
;; (define outport #f)

;; (define (catport port)
;;   (let ((x (read-char port)))
;;     (if (eof? x)
;;         (close-output-port outport)
;;         (begin
;;           (write-char x outport)
;;           (catport port)))))

;; (define (go)
;;   (set! inport (open-input-file "testfile.in"))
;;   (set! outport (open-output-file "testfile.out"))
;;   (catport inport)
;;   (close-input-port inport))

;; (do ((i 0 (+ 1 i))) ((= 10 i)) (go))

inport := #f
outport := #f

testin := "testin"
testout := "testout"

if (not (e? testin)) {
  edisplay* "creating" testin
  ;; use /dev/zero -- /dev/urandom causes CONSTANT_CHARACTER issues
  dd if=/dev/zero of=testin bs=1K count=512
}

;%%vm-trace 1
{
  catport :+ function (port) {
    x := read-char port
    if (eof? x) \
       (close-output-handle outport) {
         write-char x outport
         catport port
       }
  }

  go := function #n {
    inport = open-input-file testin
    outport = open-output-file testout
    catport inport
    close-input-handle inport
  }

  do ((i 0 (1 + i))) \
     ((== 1 i)) \
     (go)
}

if (e? testin) {
  edisplay* "removing" testin "and" testout
   rm testin testout
}

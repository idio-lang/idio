;;
;; Copyright (c) 2020, 2021 Ian Fitchet <idf(at)idio-lang.org>
;;
;; Licensed under the Apache License, Version 2.0 (the "License"); you
;; may not use this file except in compliance with the License.  You
;; may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.
;;
;;

;;
;; test-struct-error.idio
;;

struct-error0 := Tests

#*

We have a bunch of test cases which should provoke a ^rt-struct-error
or a ^rt-parameter-type-error.  So we can write a load function which
will wrapper the actual load with a trap for (^rt-struct-error
^rt-parameter-type-error) and compare the message strings.

*#

struct-error-load := {
  n := 0

  function (filename msg) {
    if (not (string? filename)) (error 'load "not a string" filename)

    n = n + 1

    exp-tests := 1

    ;eprintf "loading #%s %s looking for %s\n" n filename msg
    trap (^rt-struct-error
	  ^rt-parameter-error) (function (c) {
				  ;eprintf "struct-error #%s: %s %s\n" n msg (idio-error-location c)
				  test (idio-error-message c) msg

				  if (not (string=? (idio-error-message c) msg)) {
				    condition-report (append-string "struct-error-load: " filename) c (current-error-handle)
				  }
				  
				  trap-return 'struct-error
	  }) {
	    t0 := Tests
	    (symbol-value 'load 'Idio) filename
	    if (not (equal? Tests (t0 + exp-tests))) {
	      eprintf "struct-error #%s: %s did not generate \"%s\"\n" n filename msg
	      Errors = Errors + 1
	      Tests = t0 + exp-tests
	    }
	  }
  }
}

;; test the various possible errors in struct.c including an embedded
;; variant to check we pick up the correct line number

struct-error-load "struct-errors/make-struct-type-bad-field-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a symbol"

struct-error-load "struct-errors/make-struct-type-bad-name-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a symbol"
struct-error-load "struct-errors/make-struct-type-bad-parent-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_type"
struct-error-load "struct-errors/make-struct-type-bad-fields-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a list"

struct-error-load "struct-errors/struct-type-name-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_type"

struct-error-load "struct-errors/struct-type-parent-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_type"

struct-error-load "struct-errors/struct-type-fields-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_type"

struct-error-load "struct-errors/struct-type-isa-bad-st-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_type"
struct-error-load "struct-errors/struct-type-isa-bad-type-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_type"

struct-error-load "struct-errors/make-struct-instance-too-few-values.idio" "make-struct-instance: not enough values: 1 < 2"

struct-error-load "struct-errors/make-struct-instance-too-many-values.idio" "make-struct-instance: too many values: 3 > 2"

struct-error-load "struct-errors/make-struct-instance-bad-st-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_type"

struct-error-load "struct-errors/struct-instance-type-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_instance"

struct-error-load "struct-errors/struct-instance-fields-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_instance"

struct-error-load "struct-errors/struct-instance-ref-non-existent.idio" "field 'z' not found"

struct-error-load "struct-errors/struct-instance-ref-bad-si-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_instance"
struct-error-load "struct-errors/struct-instance-ref-bad-field-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a symbol"

struct-error-load "struct-errors/struct-instance-ref-direct-negative.idio" "%struct-instance-ref-direct bounds error: -1 < 0"
struct-error-load "struct-errors/struct-instance-ref-direct-non-existent.idio" "%struct-instance-ref-direct bounds error: 3 >= 2"

struct-error-load "struct-errors/struct-instance-ref-direct-bad-si-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_instance"
struct-error-load "struct-errors/struct-instance-ref-direct-bad-st-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_type"
struct-error-load "struct-errors/struct-instance-ref-direct-bad-index-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a fixnum"
struct-error-load "struct-errors/struct-instance-ref-direct-wrong-type.idio" "%struct-instance-ref-direct: a 'foo' is not a '^error'"

struct-error-load "struct-errors/struct-instance-set-non-existent.idio" "field 'z' not found"

struct-error-load "struct-errors/struct-instance-set-bad-si-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_instance"
struct-error-load "struct-errors/struct-instance-set-bad-field-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a symbol"

struct-error-load "struct-errors/struct-instance-set-direct-negative.idio" "%struct-instance-set-direct! bounds error: -1 < 0"
struct-error-load "struct-errors/struct-instance-set-direct-non-existent.idio" "%struct-instance-set-direct! bounds error: 3 >= 2"

struct-error-load "struct-errors/struct-instance-set-direct-bad-si-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_instance"
struct-error-load "struct-errors/struct-instance-set-direct-bad-st-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_type"
struct-error-load "struct-errors/struct-instance-set-direct-bad-index-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a fixnum"
struct-error-load "struct-errors/struct-instance-set-direct-wrong-type.idio" "%struct-instance-set-direct!: a 'foo' is not a '^error'"

struct-error-load "struct-errors/struct-instance-isa-bad-si-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_instance"
struct-error-load "struct-errors/struct-instance-isa-bad-type-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a struct_type"

;; all done?
Tests? (struct-error0 + 34)

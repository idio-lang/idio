;;
;; Copyright (c) 2021 Ian Fitchet <idf(at)idio-lang.org>
;;
;; Licensed under the Apache License, Version 2.0 (the "License"); you
;; may not use this file except in compliance with the License.  You
;; may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.
;;
;;

;;
;; test-hash-error.idio
;;

hash-error0 := Tests

#*

We have a bunch of test cases which should provoke a ^rt-hash-error or
^rt-parameter-error.  So we can write a load function which will
wrapper the actual load with a trap for
(^rt-hash-error ^rt-parameter-error) and compare the message strings.

*#

hash-error-load := {
  n := 0

  function (filename msg) {
    if (not (string? filename)) (error 'load "not a string" filename)

    n = n + 1

    exp-tests := 1

    ;eprintf "loading #%s %s looking for %s\n" n filename msg
    trap (^rt-hash-error
	  ^rt-parameter-error) (function (c) {
				  ;eprintf "hash-error #%s: %s %s\n" n msg (idio-error-location c)
				  test (idio-error-message c) msg

				  if (not (string=? (idio-error-message c) msg)) {
				    condition-report (append-string "hash-error-load: " filename) c (current-error-handle)
				  }
				  
				  trap-return 'hash-error
	  }) {
	    t0 := Tests
	    (symbol-value 'load 'Idio) filename
	    if (not (equal? Tests (t0 + exp-tests))) {
	      eprintf "hash-error #%s: %s did not generate \"%s\"\n" n filename msg
	      Errors = Errors + 1
	      Tests = t0 + exp-tests
	    }
	  }
  }
}

hash-error-load "hash-errors/hashing-return-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a integer"
hash-error-load "hash-errors/hashing-return-float.idio" "bad parameter type: '1.1e+0' a BIGNUM is not a integer"
hash-error-load "hash-errors/hashing-return-negative-fixnum.idio" "hashing function has returned a negative value"
hash-error-load "hash-errors/hashing-return-negative-bignum.idio" "hashing function has returned a negative value"

hash-error-load "hash-errors/hash-set-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"
hash-error-load "hash-errors/hash-set-nil-key.idio" "hash-set! key: is nil"

hash-error-load "hash-errors/hash-exists-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"
hash-error-load "hash-errors/hash-exists-nil-key.idio" "hash-exists? key: is nil"

hash-error-load "hash-errors/hash-ref-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"
hash-error-load "hash-errors/hash-ref-nil-key.idio" "hash-ref key: is nil"
hash-error-load "hash-errors/hash-ref-non-existent-key.idio" "key not found"

hash-error-load "hash-errors/hash-delete-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"
hash-error-load "hash-errors/hash-delete-nil-key.idio" "hash-delete! key: is nil"

hash-error-load "hash-errors/hash-keys-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"
hash-error-load "hash-errors/hash-values-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"

hash-error-load "hash-errors/make-hash-size-float.idio" "bad parameter type: '1.0e+1' a BIGNUM is not a fixnum"

hash-error-load "hash-errors/alist2hash-bad-alist.idio" "bad parameter type: 'b' a CONSTANT_UNICODE is not a not a pair in alist"
hash-error-load "hash-errors/alist2hash-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a list"

hash-error-load "hash-errors/hash-equivalence-function-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"
hash-error-load "hash-errors/hash-hash-function-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"
hash-error-load "hash-errors/hash-size-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"

hash-error-load "hash-errors/hash-update-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"

hash-error-load "hash-errors/hash-walk-bad-hash-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"
hash-error-load "hash-errors/hash-walk-bad-func-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a function"

hash-error-load "hash-errors/hash-fold-bad-hash-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"
hash-error-load "hash-errors/hash-fold-bad-func-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a function"

hash-error-load "hash-errors/copy-hash-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"
hash-error-load "hash-errors/copy-hash-bad-depth-value.idio" "copy-hash depth='completely': should be 'deep or 'shallow"
hash-error-load "hash-errors/copy-hash-bad-depth-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a symbol"

hash-error-load "hash-errors/merge-hash-bad-first-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"
hash-error-load "hash-errors/merge-hash-bad-second-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a hash"

;; all done?
Tests? (hash-error0 + 31)

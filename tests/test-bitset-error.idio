;;
;; Copyright (c) 2021-2022 Ian Fitchet <idf(at)idio-lang.org>
;;
;; Licensed under the Apache License, Version 2.0 (the "License"); you
;; may not use this file except in compliance with the License.  You
;; may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.
;;
;;

;;
;; test-bitset-error.idio
;;

bitset-error0 := Tests

#*

We have a bunch of test cases which should provoke a ^rt-bitset-error
or ^rt-parameter-type-error.  So we can write a load function which
will wrapper the actual load with a trap for
(^rt-bitset-error ^rt-parameter-type-error) and compare the message
strings.

*#

bitset-error-load := {
  n := 0

  function/name bitset-error-load (filename msg) {
    if (not (string? filename)) (error/type ^rt-parameter-type-error 'load "string" filename)

    n = n + 1

    exp-tests := 1

    test-report "loading #%s %s looking for %s\n" n filename msg
    trap (^rt-bitset-error
	  ^rt-parameter-type-error) (function (c) {
	    ;eprintf "bitset-error #%s: %s %s\n" n msg (idio-error-location c)
	    test (idio-error-message c) msg

	    if (not (string=? (idio-error-message c) msg)) {
	      condition-report (append-string "bitset-error-load: " filename) c (current-error-handle)
	    }
	    
	    trap-return 'bitset-error
	  }) {
	    t0 := Tests
	    (symbol-value 'load 'Idio) filename
	    if (not (equal? Tests (t0 + exp-tests))) {
	      eprintf "bitset-error #%s: %s did not generate \"%s\"\n" n filename msg
	      Errors = Errors + 1
	      Tests = t0 + exp-tests
	    }
    }
  }
}

bitset-error-load "bitset-errors/bitset-set-bounds.idio" "bitset bounds error: 5 >= size 3"
bitset-error-load "bitset-errors/bitset-clear-bounds.idio" "bitset bounds error: 5 >= size 3"
bitset-error-load "bitset-errors/bitset-ref-bounds.idio" "bitset bounds error: 5 >= size 3"

bitset-error-load "bitset-errors/make-bitset-size-float.idio" "bad parameter type: '1.1e+0' a bignum is not a integer"
bitset-error-load "bitset-errors/make-bitset-size-not-integer.idio" "bad parameter type: '#f' a constant is not a integer"

bitset-error-load "bitset-errors/bitset-size-bad-type.idio" "bad parameter type: '#t' a constant is not a bitset"

bitset-error-load "bitset-errors/bitset-set-bad-type.idio" "bad parameter type: '#t' a constant is not a bitset"
bitset-error-load "bitset-errors/bitset-set-float.idio" "bad parameter type: '1.1e+0' a bignum is not a integer"
bitset-error-load "bitset-errors/bitset-set-non-numeric.idio" "bad parameter type: '#f' a constant is not a unicode|integer"

bitset-error-load "bitset-errors/bitset-clear-bad-type.idio" "bad parameter type: '#t' a constant is not a bitset"
bitset-error-load "bitset-errors/bitset-clear-float.idio" "bad parameter type: '1.1e+0' a bignum is not a integer"
bitset-error-load "bitset-errors/bitset-clear-non-numeric.idio" "bad parameter type: '#f' a constant is not a unicode|integer"

bitset-error-load "bitset-errors/bitset-ref-bad-type.idio" "bad parameter type: '#t' a constant is not a bitset"
bitset-error-load "bitset-errors/bitset-ref-float.idio" "bad parameter type: '1.1e+0' a bignum is not a integer"
bitset-error-load "bitset-errors/bitset-ref-non-numeric.idio" "bad parameter type: '#f' a constant is not a unicode|integer"

bitset-error-load "bitset-errors/copy-bitset-bad-type.idio" "bad parameter type: '#t' a constant is not a bitset"

bitset-error-load "bitset-errors/merge-bitset-bad-arg-type.idio" "bad parameter type: '#t' a constant is not a bitset"
bitset-error-load "bitset-errors/merge-bitset-non-matching-sizes.idio" "bitset size mistmatch: 4 != 3"

bitset-error-load "bitset-errors/and-bitset-bad-arg-type.idio" "bad parameter type: '#t' a constant is not a bitset"
bitset-error-load "bitset-errors/and-bitset-non-matching-sizes.idio" "bitset size mistmatch: 4 != 3"

bitset-error-load "bitset-errors/ior-bitset-bad-arg-type.idio" "bad parameter type: '#t' a constant is not a bitset"
bitset-error-load "bitset-errors/ior-bitset-non-matching-sizes.idio" "bitset size mistmatch: 4 != 3"

bitset-error-load "bitset-errors/xor-bitset-bad-arg-type.idio" "bad parameter type: '#t' a constant is not a bitset"
bitset-error-load "bitset-errors/xor-bitset-non-matching-sizes.idio" "bitset size mistmatch: 4 != 3"

bitset-error-load "bitset-errors/not-bitset-bad-type.idio" "bad parameter type: '#t' a constant is not a bitset"

bitset-error-load "bitset-errors/subtract-bitset-bad-arg-type.idio" "bad parameter type: '#t' a constant is not a bitset"
bitset-error-load "bitset-errors/subtract-bitset-non-matching-sizes.idio" "bitset size mistmatch: 4 != 3"

bitset-error-load "bitset-errors/equal-bitset-not-bitset-1.idio" "bad parameter type: '#f' a constant is not a bitset"
bitset-error-load "bitset-errors/equal-bitset-not-bitset-2.idio" "bad parameter type: '#f' a constant is not a bitset"

bitset-error-load "bitset-errors/bitset-for-each-set-bad-type.idio" "bad parameter type: '#t' a constant is not a bitset"
bitset-error-load "bitset-errors/bitset-for-each-set-bad-func-type.idio" "bad parameter type: '#t' a constant is not a function"

bitset-error-load "bitset-errors/fold-bitset-bad-type.idio" "bad parameter type: '#t' a constant is not a bitset"
bitset-error-load "bitset-errors/fold-bitset-bad-func-type.idio" "bad parameter type: '#t' a constant is not a function"

;; all done?
Tests? (bitset-error0 + 33)

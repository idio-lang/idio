;;
;; Copyright (c) 2022 Ian Fitchet <idf(at)idio-lang.org>
;;
;; Licensed under the Apache License, Version 2.0 (the "License"); you
;; may not use this file except in compliance with the License.  You
;; may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.
;;
;;

;;
;; test-rfc6234-error.idio
;;

module test/rfc6234

rfc6234-error0 := Tests

#*

We have a bunch of test cases which should provoke an
^rt-parameter-error.  So we can write a load function which will
wrapper the actual load with a trap for ^rt-parameter-error and
compare the message strings.

*#

rfc6234-error-load := {
  n := 0

  function/name rfc6234-error-load (filename msg) {
    if (not (string? filename)) (error/type ^rt-parameter-type-error 'load "string" filename)

    n = n + 1

    exp-tests := 1

    test-report "loading #%s %s looking for %s\n" n filename msg
    trap ^rt-parameter-error (function (c) {
      ;eprintf "rfc6234-error #%s: %s %s\n" n msg (idio-error-location c)
      test (idio-error-message c) msg

      if (not (string=? (idio-error-message c) msg)) {
	condition-report (append-string "rfc6234-error-load: " filename) c (current-error-handle)
      }
      
      trap-return 'rfc6234-error
    }) {
      t0 := Tests
      (symbol-value 'load 'Idio) filename
      if (not (equal? Tests (t0 + exp-tests))) {
	eprintf "rfc6234-error #%s: %s did not generate \"%s\"\n" n filename msg
	Errors = Errors + 1
	Tests = t0 + exp-tests
      }
    }
  }
}

rfc6234-error-load "rfc6234-errors/shasum-string-bad-string-type.idio" "bad parameter type: '#t' a constant is not a string"
rfc6234-error-load "rfc6234-errors/shasum-string-bad-alg-type.idio" "bad parameter type: '#t' a constant is not a symbol"
rfc6234-error-load "rfc6234-errors/shasum-string-bad-alg-value.idio" "shasum-string alg='foo': should be one of 'SHA1, 'SHA224, 'SHA256, 'SHA384, 'SHA512"

rfc6234-error-load "rfc6234-errors/shasum-fd-bad-fd-type.idio" "bad parameter type: '#t' a constant is not a C/int"
rfc6234-error-load "rfc6234-errors/shasum-fd-bad-alg-type.idio" "bad parameter type: '#t' a constant is not a symbol"
rfc6234-error-load "rfc6234-errors/shasum-fd-bad-alg-value.idio" "shasum-fd alg='foo': should be one of 'SHA1, 'SHA224, 'SHA256, 'SHA384, 'SHA512"

rfc6234-error-load "rfc6234-errors/shasum-file-bad-file-type.idio" "bad parameter type: '#t' a constant is not a string"
rfc6234-error-load "rfc6234-errors/shasum-file-bad-alg-type.idio" "bad parameter type: '#t' a constant is not a symbol"
rfc6234-error-load "rfc6234-errors/shasum-file-bad-alg-value.idio" "shasum-file alg='foo': should be one of 'SHA1, 'SHA224, 'SHA256, 'SHA384, 'SHA512"

;; all done?
Tests? (rfc6234-error0 + 9)

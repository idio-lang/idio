;;
;; Copyright (c) 2020-2021 Ian Fitchet <idf(at)idio-lang.org>
;;
;; Licensed under the Apache License, Version 2.0 (the "License"); you
;; may not use this file except in compliance with the License.  You
;; may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.
;;
;;

;;
;; test-call-cc.idio
;;
call-cc0 := Tests

;; Some tests from
;; http://www.scheme.com/tspl3/control.html#./control:s53

member := function (x ls) {
  call/cc (function (brk) {
    do ((ls ls (pt ls))) \
       ((null? ls) #f) \
       (if (equal? x (ph ls))
	   (brk ls))
  })
}

test (member 'd '(a b c)) #f
test (member 'b '(a b c)) '(b c)

;; NB The body of the call/cc returns a function which we need to
;; apply to get the result
test ((call/cc {
  x := 'a
  function (k) {
    unwind-protect (k (function () x)) (set! x 'b)
  }
})) 'b

;; RnRS examples

test (call/cc
      (function (exit)
	 (for-each (function (x)
		      (if (negative? x)
			  (exit x)))
	  '(54 0 37 -3 245 19))
	 #t)) -3

define (list-length obj) {
  call/cc (function (rtn) {
	     r :+ (function (obj)
		     (cond ((null? obj) 0)
			   ((pair? obj)
			    (+ (r (pt obj)) 1))
			   (else (rtn #f))))
	     r obj
  })
}

test (list-length '(1 2 3 4)) 4
test (list-length '(a b & c)) #f

test (call-with-values (function () (values 4 5))
		       (function (a b) b)) 5

mul := \*
min := \-
test (call-with-values mul min) -1

test {
  path := #n
  saved-k := #n

  add := function (s) {
	   path = pair s path
  }

  dynamic-wind (function () {
		  add 'connect
  }) \
	       (function () {
		  add (call/cc (function (k) {
				  saved-k = k
				  'talk1
		  }))
	       }) \
	       (function () {
		  add 'disconnect
	       })

  if (lt (length path) 4) {
    saved-k 'talk2
  } (reverse path)
} '(connect talk1 disconnect connect talk2 disconnect)

;; all done?
Tests? (call-cc0 + 9)

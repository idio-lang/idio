;;
;; Copyright (c) 2015, 2020, 2021 Ian Fitchet <idf(at)idio-lang.org>
;;
;; Licensed under the Apache License, Version 2.0 (the "License"); you
;; may not use this file except in compliance with the License.  You
;; may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.
;;
;;

;;
;; path.idio
;;

define-struct-accessors-only ~path		pattern

sort-size := #n
sort-atime := #n
sort-mtime := #n
sort-ctime := #n

{
  sort-stats := #n

  key-stat-size := function (p) {
		     libc/struct-stat-ref (hash-ref sort-stats p) 'st_size
  }

  key-stat-atime := function (p) {
		      libc/struct-stat-ref (hash-ref sort-stats p) 'st_atime
  }

  key-stat-mtime := function (p) {
		      libc/struct-stat-ref (hash-ref sort-stats p) 'st_mtime
  }

  key-stat-ctime := function (p) {
		      libc/struct-stat-ref (hash-ref sort-stats p) 'st_ctime
  }

  sort-size = function (l) {
    sort-stats = make-hash #n #n ((length l) + 10)

    for-each (function (p) {
		hash-set! sort-stats p (libc/stat p)
    }) l

    sort l C/< key-stat-size
  }

  sort-atime = function (l) {
    sort-stats = make-hash #n #n ((length l) + 10)

    for-each (function (p) {
		hash-set! sort-stats p (libc/stat p)
    }) l

    sort l C/< key-stat-atime
  }

  sort-mtime = function (l) {
    sort-stats = make-hash #n #n ((length l) + 10)

    for-each (function (p) {
		hash-set! sort-stats p (libc/stat p)
    }) l

    sort l C/< key-stat-mtime
  }

  sort-ctime = function (l) {
    sort-stats = make-hash #n #n ((length l) + 10)

    for-each (function (p) {
		hash-set! sort-stats p (libc/stat p)
    }) l

    sort l C/< key-stat-ctime
  }
}

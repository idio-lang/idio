;;
;; Copyright (c) 2015, 2020, 2021 Ian Fitchet <idf(at)idio-lang.org>
;;
;; Licensed under the Apache License, Version 2.0 (the "License"); you
;; may not use this file except in compliance with the License.  You
;; may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.
;;
;;

;;
;; bootstrap.idio
;;

#*

One problem with meta-programming functionality into a language is
that anything defined before such functionality is added doesn't get
to use it.  Duh!  That might be things like "module" or
even (infix) "+".

So we need to carefully stagger things into life noting that if you
author any bootstrap code you might need to go back to basics.

*#

;display "This is bootstrap.idio\n"

include "bootstrap/s9-syntax.idio"
include "bootstrap/call-cc.idio"
include "bootstrap/standard-operators.idio"

; delim-control may use infix + from standard-operators
include "bootstrap/delim-control.idio"

include "bootstrap/closure.idio"
include "bootstrap/common.idio"
include "bootstrap/struct.idio"
include "bootstrap/condition.idio"
include "bootstrap/path.idio"
include "bootstrap/posix-regex.idio"

include "bootstrap/module.idio"

include "bootstrap/s9.idio"

; SRFI-8 receive is in common.idio as with-values-from
; SRFI-17 Generalized set! is in closure.idio
load "SRFI-89.idio"			; Optional positional and named parameters
load "SRFI-95.idio"			; sort, merge

; after SRFI-89
require path-functions

; after SRFI-95, please
load "doc.idio"

load "system.idio"

import SRFI-0				; cond-expand
import job-control			; override C primitives
import unicode

;; don't create a core dump if there are no debug symbols
(cond-expand
 ((not IDIO_DEBUG) {
   rl := libc/getrlimit libc/RLIMIT_CORE
   libc/struct-rlimit-set! rl 'rlim_cur (C/integer-> 0 libc/rlim_t)
   libc/setrlimit libc/RLIMIT_CORE rl
 }))

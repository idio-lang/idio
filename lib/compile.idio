#*

Copyright (c) 2022 Ian Fitchet <idf(at)idio-lang.org>

Licensed under the Apache License, Version 2.0 (the "License"); you
may not use this file except in compliance with the License.  You
may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

compile.idio

*#

module compile
export (
	 compile-file
)
import evaluate codegen vm

define (compile-file file & args) "
" {
  eenv := #n

  if (pair? args) {
    eenv = ph args
  } {
    eenv = %evaluation-environment file #t
  }

  printf "compile-file: file %s\n" file

  printf "compile-file: eenv %s\n" eenv
  fh := open-input-file file

  all-pc0 := #n

  loop :+ function #n {
    e := read fh
    if (not (eof-object? e)) {
      ;;printf "compile-file: e %s\n" e
      m := #f
      trap (^rt-parameter-error
	    ^rt-function-error) (function (c) {
	      condition-report "compile" c
	      printf "...\n\n"
	      sleep 2
	      m = list I-NOP
	      trap-return #f
	    }) {
	m = evaluate e eenv
      }
      ;printf "compile-file: m %s\n" m
      ;printf "compile-file: eenv %s\n" eenv
      pc0 := codegen m eenv
      all-pc0 = pair pc0 all-pc0
      (loop)
    } {
      printf "compile-file: ?? e %s\n" e
    }
  }

  (loop)

  close-handle fh

  printf "\n"

  %vm-add-xenv-from-eenv eenv (reverse! all-pc0)

  if #f {
    symbols := %eenv-symbols eenv
    while (pair? symbols) {
      printf "compile-file: st %s\n" (ph symbols)
      symbols = pt symbols
    }

    printf "compile-file: vs %s\n" (%eenv-values eenv)

    printf "compile-file: cs %s\n" (%eenv-constants eenv)

    printf "compile-file: eenv %s\n" eenv
  }

  all-pc0
}

provide compile

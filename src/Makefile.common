HOSTNAME	:= $(shell uname -n)
OS		:= $(shell uname -s)
REV		:= $(shell uname -r)
ARCH		:= $(shell uname -m)
SHELL		:= bash

ifndef TOPDIR
TOPDIR		?= $(abspath $(PWD)/..)
endif
SRCDIR		?= $(TOPDIR)/src
BINDIR		?= $(TOPDIR)/bin
LIBDIR		?= $(TOPDIR)/lib
EXTDIR		?= $(TOPDIR)/ext
TESTSDIR	?= $(TOPDIR)/tests
UTILSDIR	?= $(TOPDIR)/utils

# local install
LI_TOPDIR	?= $(TOPDIR)/.local
LI_BINDIR	?= $(LI_TOPDIR)/bin
LI_LIBDIR	?= $(LI_TOPDIR)/lib/idio
LI_LIBVERDIR	?= $(LI_LIBDIR)/${IDIO_SYSTEM_VERSION_MM}

# user install
UI_TOPDIR	?= $(HOME)/.local
UI_BINDIR	?= $(UI_TOPDIR)/bin
UI_LIBDIR	?= $(UI_TOPDIR)/lib/idio
UI_LIBVERDIR	?= $(UI_LIBDIR)/${IDIO_SYSTEM_VERSION_MM}

DOCDIR		?= $(TOPDIR)/doc
SRCDOCDIR	:= $(DOCDIR)/src
SRCKDOUTDIR	:= $(SRCDOCDIR)/kernel-autodoc-out

sources		:= $(wildcard *.c)
objects		:= $(patsubst %.c,%.o,$(sources))
deps		:= $(patsubst %.c,%.d,$(sources))
isources	:= $(wildcard $(LIBDIR)/*.idio) $(wildcard $(LIBDIR)/bootstrap/*.idio)

LD_SONAME_FLAGS	:=

ifeq ($(OS),Darwin)

LIBFFI_INCDIR	:= /usr/include/ffi
ifeq ($(wildcard ${LIBFFI_INCDIR}/.),)
XCODE_DIR	:= $(shell xcode-select -print-path)
# can have multiple installs so pick the "last"
LIBFFI_INCDIR	:= $(shell find ${XCODE_DIR} -type d -name ffi | tail -1)
endif

ifeq ($(REV),9.8.0)
CFLAGS		:=
else
# Yes, I know there's an arithmetic shift left of a signed variable!
CFLAGS		:= -Wno-shift-negative-value
endif

LDFLAGS		:= -rdynamic
LIBS		:= -ldl

else ifeq ($(OS),Linux)

LIBFFI_INCDIR	= $(wildcard /usr/lib*/libffi-*/include)
LDFLAGS		:= -rdynamic
LD_SONAME_FLAGS	:= -Wl,-soname=lib${MODULE_NAME}.so.${MODULE_SYSTEM_VERSION_M}
LIBS		:= -ldl
ifeq ($(ARCH),x86_64)
CFLAGS		:= -m64 $(CFLAGS) # -fsanitize=undefined
LDFLAGS		:= -m64 -Wl,-Map=map $(LDFLAGS)
endif

ifneq (,$(findstring centos-6,$(HOSTNAME)))
LIBS		:= -lrt $(LIBS)
endif

ifneq (,$(findstring debian-,$(HOSTNAME)))
CC		:= gcc-8
endif

ifneq (,$(findstring ubuntu-18,$(HOSTNAME)))
CC		:= gcc-8
endif

else ifeq ($(OS),SunOS)

CC		:= gcc
LIBFFI_INCDIR	= $(wildcard /usr/lib/$(shell isainfo -k | grep -v i386)/libffi-*/include)
LDFLAGS		:= -L/usr/local/lib -R/usr/local/lib
LD_SONAME_FLAGS	:= -Wl,-soname=lib${MODULE_NAME}.so.${MODULE_SYSTEM_VERSION_M}
LIBS		:= -ldl
CFLAGS		:= -D__EXTENSIONS__
M64		:= $(filter %64, $(shell isainfo))
ifeq ($(M64),amd64)
CFLAGS		:= -m64 $(CFLAGS)
LDFLAGS		:= -m64 $(LDFLAGS)
endif

else ifeq ($(OS),FreeBSD)

ifeq ($(REV),10.0-RELEASE)
CC		:= $(wildcard /usr/local/bin/gcc4?)
else
CC		:= cc		# clang
endif

LIBFFI_INCDIR	:= /usr/local/include
LDFLAGS		:= -Xlinker --export-dynamic -L/usr/local/lib
LD_SONAME_FLAGS	:= -Wl,--soname=lib${MODULE_NAME}.so.${MODULE_SYSTEM_VERSION_M}

# Yes, I know there's an arithmetic shift left of a signed variable!
CFLAGS		:= -Wno-shift-negative-value

else ifeq ($(OS),OpenBSD)

CC		:= cc		# clang

LIBFFI_INCDIR	:= /usr/local/include
LDFLAGS		:= -Xlinker --export-dynamic -L/usr/local/lib
LD_SONAME_FLAGS	:= -Wl,--soname=lib${MODULE_NAME}.so.${MODULE_SYSTEM_VERSION_M}

CFLAGS		:= -DIDIO_DEV_FD

else ifeq ($(OS),NetBSD)

CC		:= gcc

LDFLAGS		:= -Xlinker --export-dynamic -L/usr/local/lib
LD_SONAME_FLAGS	:= -Wl,--soname=lib${MODULE_NAME}.so.${MODULE_SYSTEM_VERSION_M}

CFLAGS		:= -DIDIO_DEV_FD

endif

ifndef LIBFFI_INCDIR
$(warning WARNING: LIBFFI_INCDIR is unset)
LIBFFI_INC	:=
else
ifeq "$(LIBFFI_INCDIR)" ""
LIBFFI_INC	:=
else
LIBFFI_INC	:= -I$(LIBFFI_INCDIR)
endif
endif

%.d: %.c
	$(CC) -MM -MP -MF $@ $(CFLAGS) -I$(SRCDIR) -I$(SRCDIR)/build-bootstrap $< -MT $*.o -MT $@

